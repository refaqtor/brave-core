diff --git a/chrome/browser/resources/settings/clear_browsing_data_dialog/clear_browsing_data_dialog.js b/chrome/browser/resources/settings/clear_browsing_data_dialog/clear_browsing_data_dialog.js
index 64f57b57b24e8df7f0fefa44aa893a39af8c7676..9bfc5858cca3c55e05010d7c42093574ede228f1 100644
--- a/chrome/browser/resources/settings/clear_browsing_data_dialog/clear_browsing_data_dialog.js
+++ b/chrome/browser/resources/settings/clear_browsing_data_dialog/clear_browsing_data_dialog.js
@@ -212,6 +212,7 @@ Polymer({
       return;
     }
     this.clearButtonDisabled_ = this.getSelectedDataTypes_(tab).length == 0;
+    this.updateButtonsVisibility_();
   },
 
   /**
@@ -307,6 +308,7 @@ Polymer({
     // Strip the common prefix, i.e. use only "<datatype>".
     const matches = prefName.match(/^browser\.clear_data\.(\w+)$/);
     this.set('counters_.' + assert(matches[1]), text);
+    this.$['on-exit-tab'].setCounter(matches[1], text);
   },
 
   /**
@@ -446,4 +448,33 @@ Polymer({
   shouldShowFooter_: function() {
     return this.diceEnabled_ && !!this.syncStatus && !!this.syncStatus.signedIn;
   },
+
+  /**
+   * Updates Clear and Save buttons visibility based on the selected tab.
+   * @private
+   */
+  updateButtonsVisibility_: function () {
+    const isOnExitTab = (this.$.tabs.selectedItem.id == 'on-exit-tab');
+    this.$.clearBrowsingDataConfirm.hidden = isOnExitTab;
+    this.$.saveOnExitSettingsConfirm.hidden = !isOnExitTab;
+  },
+
+  /**
+   * Updates Save button enabled state based on on-exit-tab's changed state.
+   * @private
+   */
+  updateSaveButtonState_: function () {
+    this.$.saveOnExitSettingsConfirm.disabled = !this.$['on-exit-tab'].isModified;
+  },
+
+  /**
+   * Saves on exit settings selections.
+   * @private
+   */
+  saveOnExitSettings_: function () {
+    this.$['on-exit-tab'].saveOnExitSettings();
+    this.updateSaveButtonState_();
+    if (!this.clearingInProgress_)
+      this.$.clearBrowsingDataDialog.close();
+  },
 });
